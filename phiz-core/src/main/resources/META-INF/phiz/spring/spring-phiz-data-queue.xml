<beans:beans
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!--====================================================================================================
    = RABBIT
    =====================================================================================================-->
    <rabbit:annotation-driven/>
    
    <!--====================================================================================================
    = KEY STORES
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="keyStoreRabbitClientKey" parent="keyStoreJks" lazy-init="true"
        p:password="${phiz.rabbitmq.crypto.client.store.key.pass}"
        p:resource="${phiz.rabbitmq.crypto.client.store.key.file}"/>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="keyStoreRabbitClientTrust" parent="keyStoreJks" lazy-init="true"
        p:password="${phiz.rabbitmq.crypto.client.store.trust.pass}"
        p:resource="${phiz.rabbitmq.crypto.client.store.trust.file}"/>
    
    <!--====================================================================================================
    = KEY MANAGERS
    =====================================================================================================-->
    <beans:bean id="keyManagerRabbitClient" parent="keyManagerNewSunX509" lazy-init="true">
        <beans:property name="factoryParameters">
            <beans:bean parent="keyStoreBuilderParams">
                <beans:constructor-arg index="0" type="java.security.KeyStore$Builder">
                    <beans:bean parent="keyStoreBuilder" factory-method="newInstance">
                        <beans:constructor-arg index="0" type="java.security.KeyStore" ref="keyStoreRabbitClientKey"/>
                        <beans:constructor-arg index="1" type="java.security.KeyStore$ProtectionParameter">
                            <beans:bean parent="keyStoreProtectionPass">
                                <!--suppress SpringPlaceholdersInspection -->
                                <beans:constructor-arg index="0" type="char[]" value="${phiz.rabbitmq.crypto.client.store.key.entry.ssl.pass}"/>
                            </beans:bean>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:constructor-arg>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = TRUST MANAGERS
    =====================================================================================================-->
    <beans:bean id="trustManagerRabbitClient" parent="trustManagerPkix" lazy-init="true">
        <beans:property name="factoryParameters">
            <beans:bean parent="certPathTrustManagerParams">
                <beans:constructor-arg index="0" type="java.security.cert.CertPathParameters">
                    <beans:bean parent="certPathParamsPkixBuilder">
                        <beans:constructor-arg index="0" type="java.security.KeyStore" ref="keyStoreRabbitClientTrust"/>
                        <beans:constructor-arg index="1" type="java.security.cert.CertSelector">
                            <beans:bean parent="certSelectorX509"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:constructor-arg>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = SECURE SOCKETS LAYER PARAMETERS
    =====================================================================================================-->
    <beans:bean id="sslParamsRabbitClient" parent="sslParamsBase"/>
    
    <!--====================================================================================================
    = SECURE SOCKETS LAYER CONTEXTS
    =====================================================================================================-->
    <beans:bean id="sslContextRabbitClient" parent="sslContextBase" lazy-init="true">
        <beans:property name="keyManagers">
            <beans:array>
                <beans:ref bean="keyManagerRabbitClient"/>
            </beans:array>
        </beans:property>
        <beans:property name="trustManagers">
            <beans:array>
                <beans:ref bean="trustManagerRabbitClient"/>
            </beans:array>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = SECURE SOCKETS LAYER SOCKET FACTORIES
    =====================================================================================================-->
    <beans:bean id="sslSocketFactoryRabbitClient" parent="sslSocketFactoryBase" lazy-init="true"
        p:sslContext-ref="sslContextRabbitClient"
        p:sslParameters-ref="sslParamsRabbitClient"/>
    
    <!--====================================================================================================
    = CONNECTION FACTORIES
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="connFactoryRabbit" class="com.rabbitmq.client.ConnectionFactory" abstract="true"
        p:host="${phiz.rabbitmq.host.name}"
        p:port="${phiz.rabbitmq.port.amqps}"
        p:saslConfig="#{ T(com.rabbitmq.client.DefaultSaslConfig).EXTERNAL }"
        p:socketFactory-ref="sslSocketFactoryRabbitClient"
        p:virtualHost="${phiz.rabbitmq.vhost.path}"/>
    
    <!--====================================================================================================
    = CONNECTION FACTORIES: SPRING
    =====================================================================================================-->
    <beans:bean id="connFactoryRabbitSpring" class="org.springframework.amqp.rabbit.connection.ConnectionFactory" abstract="true"/>
    
    <beans:bean id="connFactoryRabbitSpringCaching" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory" parent="connFactoryRabbitSpring"
        abstract="true"/>
    
    <!--====================================================================================================
    = TRANSACTION MANAGERS
    =====================================================================================================-->
    <beans:bean id="txManagerRabbit" class="org.springframework.amqp.rabbit.transaction.RabbitTransactionManager" parent="txManager" abstract="true"
        p:nestedTransactionAllowed="true"
        p:validateExistingTransaction="true"/>
    
    <!--====================================================================================================
    = ADMINISTRATORS
    =====================================================================================================-->
    <beans:bean id="amqpAdmin" class="org.springframework.amqp.core.AmqpAdmin" abstract="true"/>
    
    <beans:bean id="rabbitAdmin" class="org.springframework.amqp.rabbit.core.RabbitAdmin" parent="amqpAdmin" abstract="true"/>
    
    <!--====================================================================================================
    = TEMPLATES
    =====================================================================================================-->
    <beans:bean id="amqpTemplate" class="org.springframework.amqp.core.AmqpTemplate" abstract="true"/>
    
    <beans:bean id="rabbitTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate" parent="amqpTemplate" abstract="true"
        p:encoding="#{ charsetUtf8.name() }"/>
    
    <!--====================================================================================================
    = MESSAGE ADDRESSES
    =====================================================================================================-->
    <beans:bean id="msgAddr" class="org.springframework.amqp.core.Address" abstract="true"/>
    
    <!--====================================================================================================
    = MESSAGE LISTENERS
    =====================================================================================================-->
    <beans:bean id="msgListener" class="org.springframework.amqp.rabbit.core.ChannelAwareMessageListener" abstract="true"/>
    
    <beans:bean id="msgListenerAdapter" class="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter" parent="msgListener" abstract="true"
        p:encoding="#{ charsetUtf8.name() }"/>
    
    <!--====================================================================================================
    = MESSAGE LISTENER CONTAINERS
    =====================================================================================================-->
    <beans:bean id="msgListenerContainer" class="org.springframework.amqp.rabbit.listener.MessageListenerContainer" abstract="true"/>
    
    <beans:bean id="msgListenerContainerSimple" class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer" parent="msgListenerContainer"
        abstract="true"
        p:autoDeclare="false"
        p:channelTransacted="true"/>
</beans:beans>