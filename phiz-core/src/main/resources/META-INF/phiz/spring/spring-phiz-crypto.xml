<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <!--====================================================================================================
    = SECURE RANDOMS
    =====================================================================================================-->
    <beans:bean id="secureRandom" class="java.security.SecureRandom" abstract="true"/>
    
    <beans:bean id="secureRandomSha1" class="gov.hhs.onc.phiz.crypto.impl.PhizSecureRandomFactoryBean" parent="secureRandom" lazy-init="true" scope="prototype"
        p:prototype="true"
        p:provider="#{ T(gov.hhs.onc.phiz.crypto.PhizCryptoProviders).SUN }"
        p:type="SHA1PRNG"/>
    
    <!--====================================================================================================
    = KEY PAIRS
    =====================================================================================================-->
    <beans:bean id="keyPair" class="java.security.KeyPair" abstract="true"/>
    
    <!--====================================================================================================
    = KEY PAIR GENERATORS
    =====================================================================================================-->
    <beans:bean id="keyPairGen" class="java.security.KeyPairGenerator" abstract="true"/>
    
    <!--suppress SpringBeanConstructorArgInspection -->
    <beans:bean id="keyPairGenBase" class="gov.hhs.onc.phiz.crypto.impl.PhizKeyPairGeneratorFactoryBean" parent="keyPairGen" lazy-init="true" scope="prototype"
        p:provider="#{ T(gov.hhs.onc.phiz.crypto.PhizCryptoProviders).BC }"
        p:secureRandom-ref="secureRandomSha1"
        p:type="#{ T(gov.hhs.onc.phiz.crypto.PhizKeyType).RSA.id }"/>
    
    <!--====================================================================================================
    = CERTIFICATES
    =====================================================================================================-->
    <beans:bean id="cert" class="java.security.cert.Certificate" abstract="true"/>
    
    <beans:bean id="certX509" class="java.security.cert.X509Certificate" parent="cert" abstract="true"/>
    
    <!--====================================================================================================
    = DISTINGUISHED NAMES
    =====================================================================================================-->
    <beans:bean id="dn" class="br.net.woodstock.rockframework.security.DistinguishedName" abstract="true"/>
    
    <!--====================================================================================================
    = CERTIFICATE REQUESTS
    =====================================================================================================-->
    <beans:bean id="certReq" class="br.net.woodstock.rockframework.security.cert.CertificateRequest" abstract="true"
        p:keySize="KEYSIZE_2K"
        p:provider="#{ T(gov.hhs.onc.phiz.crypto.PhizCryptoProviders).BC_NAME }"
        p:signType="SHA512_RSA"
        p:version="V3"/>
    
    <beans:bean id="certReqCa" parent="certReq" abstract="true"
        p:basicConstraintsCritical="true">
        <beans:property name="keyUsage">
            <beans:set>
                <beans:value>DIGITAL_SIGNATURE</beans:value>
                <beans:value>KEY_CERT_SIGN</beans:value>
            </beans:set>
        </beans:property>
    </beans:bean>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="certReqLeaf" parent="certReq" abstract="true"
        p:ocspURL="${phiz.crypto.ocsp.url}">
        <beans:property name="keyUsage">
            <beans:set>
                <beans:value>DIGITAL_SIGNATURE</beans:value>
            </beans:set>
        </beans:property>
        <beans:property name="extendedKeyUsage">
            <beans:set>
                <beans:value>CLIENT_AUTH</beans:value>
                <beans:value>SERVER_AUTH</beans:value>
            </beans:set>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = CERTIFICATE GENERATORS
    =====================================================================================================-->
    <beans:bean id="certGen" class="br.net.woodstock.rockframework.security.cert.CertificateGenerator" abstract="true"/>
    
    <beans:bean id="certGenBc" class="br.net.woodstock.rockframework.security.cert.impl.BouncyCastleCertificateGenerator" parent="certGen"
        factory-method="getInstance"/>
    
    <!--====================================================================================================
    = CREDENTIALS
    =====================================================================================================-->
    <beans:bean id="cred" class="gov.hhs.onc.phiz.crypto.PhizCredential" abstract="true"/>
    
    <beans:bean id="credImpl" class="gov.hhs.onc.phiz.crypto.impl.PhizCredentialImpl" parent="cred" abstract="true"/>
    
    <beans:bean id="credGen" class="gov.hhs.onc.phiz.crypto.impl.GeneratedCredentialFactoryBean" parent="cred" abstract="true">
        <beans:property name="keyPairGeneratorBeanName">
            <beans:idref bean="keyPairGenBase"/>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = KEY STORE PROTECTION
    =====================================================================================================-->
    <beans:bean id="keyStoreProtection" class="java.security.KeyStore$ProtectionParameter" abstract="true"/>
    
    <beans:bean id="keyStoreProtectionPass" class="java.security.KeyStore$PasswordProtection" parent="keyStoreProtection" abstract="true"/>
    
    <!--====================================================================================================
    = KEY STORE ENTRIES
    =====================================================================================================-->
    <beans:bean id="keyStoreEntry" class="gov.hhs.onc.phiz.crypto.PhizKeyStoreEntry" abstract="true"/>
    
    <beans:bean id="keyStoreEntryTrustedCert" class="gov.hhs.onc.phiz.crypto.impl.TrustedCertificateKeyStoreEntry" parent="keyStoreEntry" abstract="true"/>
    
    <beans:bean id="keyStoreEntryPrivateKey" class="gov.hhs.onc.phiz.crypto.impl.PrivateKeyKeyStoreEntry" parent="keyStoreEntry" abstract="true"/>
    
    <!--====================================================================================================
    = KEY STORES
    =====================================================================================================-->
    <beans:bean id="keyStore" class="java.security.KeyStore" abstract="true"/>
    
    <beans:bean id="keyStoreJks" class="gov.hhs.onc.phiz.crypto.impl.PhizKeyStoreFactoryBean" parent="keyStore" abstract="true"
        p:provider="#{ T(gov.hhs.onc.phiz.crypto.PhizCryptoProviders).SUN }"
        p:type="#{ T(br.net.woodstock.rockframework.security.store.KeyStoreType).JKS.type }"/>
    
    <beans:bean id="keyStoreGen" class="gov.hhs.onc.phiz.crypto.impl.GeneratedKeyStoreFactoryBean" parent="keyStoreJks" abstract="true"/>
</beans:beans>