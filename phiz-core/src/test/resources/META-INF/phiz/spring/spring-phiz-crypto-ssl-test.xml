<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!--====================================================================================================
    = CREDENTIALS: CERTIFICATE AUTHORITIES
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="credCa" parent="credGen">
        <beans:property name="credential">
            <beans:bean parent="credImpl">
                <beans:property name="certificateRequest">
                    <beans:bean parent="certReqCa">
                        <beans:constructor-arg name="subject">
                            <!--suppress SpringPlaceholdersInspection -->
                            <beans:bean parent="dn"
                                p:commonName="${phiz.crypto.cred.ca.subject.cn}"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="credCaUntrusted" parent="credGen">
        <beans:property name="credential">
            <beans:bean parent="credImpl">
                <beans:property name="certificateRequest">
                    <beans:bean parent="certReqCa">
                        <beans:constructor-arg name="subject">
                            <!--suppress SpringPlaceholdersInspection -->
                            <beans:bean parent="dn"
                                p:commonName="${phiz.crypto.cred.ca.untrusted.subject.cn}"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = CREDENTIALS: LEAF
    =====================================================================================================-->
    <beans:bean id="credLeaf" parent="credImpl" abstract="true"
        p:issuerCredential-ref="credCa"/>
    
    <beans:bean id="credLeafUntrusted" parent="credLeaf" abstract="true"
        p:issuerCredential-ref="credCaUntrusted"/>
    
    <!--====================================================================================================
    = KEY STORES: CERTIFICATE AUTHORITY
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="keyStoreCa" parent="keyStoreGen" lazy-init="true"
        p:password="${phiz.crypto.store.key.ca.pass}"
        p:resource="${phiz.crypto.store.key.ca.file}">
        <beans:property name="entryMap">
            <beans:map>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="${phiz.crypto.store.key.ca.entry.ca.alias}">
                    <!--suppress SpringPlaceholdersInspection -->
                    <beans:bean parent="keyStoreEntryPrivateKey"
                        p:certificateChain="#{ credCa.certificateResponse.identity.chain[0] }"
                        p:password="${phiz.crypto.store.key.ca.entry.ca.pass}"
                        p:privateKey="#{ credCa.certificateResponse.identity.privateKey }"/>
                </beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = OCSP SERVERS
    =====================================================================================================-->
    <beans:bean id="ocspServer" class="gov.hhs.onc.phiz.test.crypto.ssl.revocation.PhizOcspServer" abstract="true"/>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="ocspServerImpl" class="gov.hhs.onc.phiz.test.crypto.ssl.revocation.impl.PhizOcspServerImpl" parent="ocspServer"
        p:host="${phiz.crypto.ocsp.host}"
        p:maxContentLength="${phiz.crypto.ocsp.content.len.max}"
        p:port="${phiz.crypto.ocsp.port}"
        p:secureRandom-ref="secureRandomSha1"
        p:signatureAlgorithmId="#{ T(br.net.woodstock.rockframework.security.sign.SignatureType).SHA512_RSA.algorithm }">
        <beans:property name="channelOptions">
            <beans:map>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="#{ T(io.netty.channel.ChannelOption).SO_BACKLOG }" value="${phiz.crypto.ocsp.socket.backlog}" value-type="java.lang.Integer"/>
                <beans:entry key="#{ T(io.netty.channel.ChannelOption).SO_REUSEADDR }" value="true" value-type="java.lang.Boolean"/>
            </beans:map>
        </beans:property>
    </beans:bean>
</beans:beans>