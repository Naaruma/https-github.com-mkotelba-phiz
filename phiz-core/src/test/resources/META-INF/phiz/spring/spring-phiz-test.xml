<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!--====================================================================================================
    = PROPERTY SOURCES PLACEHOLDER CONFIGURERS
    =====================================================================================================-->
    <beans:bean id="propSourcesPlaceholderConfigurerTest" parent="propSourcesPlaceholderConfigurer"
        p:order="#{ propSourcesPlaceholderConfigurerMain.order - 1 }">
        <beans:property name="locations">
            <beans:array>
                <beans:value>classpath*:META-INF/phiz/phiz*-test.properties</beans:value>
            </beans:array>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = CREDENTIALS: CERTIFICATE AUTHORITIES
    =====================================================================================================-->
    <beans:bean id="credCaRoot" parent="credGen">
        <beans:property name="credential">
            <beans:bean parent="credImpl">
                <beans:property name="certificateRequest">
                    <beans:bean parent="certReqCa">
                        <beans:constructor-arg name="subject">
                            <!--suppress SpringPlaceholdersInspection -->
                            <beans:bean parent="dn"
                                p:commonName="${phiz.crypto.cred.ca.root.subject.cn}"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="credCa" parent="credGen"
        p:certificateResource="${phiz.crypto.cred.ca.cert.file}">
        <beans:property name="credential">
            <beans:bean parent="credImpl"
                p:issuerCredential-ref="credCaRoot">
                <beans:property name="certificateRequest">
                    <beans:bean parent="certReqCa">
                        <beans:constructor-arg name="subject">
                            <!--suppress SpringPlaceholdersInspection -->
                            <beans:bean parent="dn"
                                p:commonName="${phiz.crypto.cred.ca.subject.cn}"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = CREDENTIALS: LEAF
    =====================================================================================================-->
    <beans:bean id="credLeaf" parent="credImpl" abstract="true"
        p:issuerCredential-ref="credCa"/>
    
    <!--====================================================================================================
    = CREDENTIALS: RABBITMQ
    =====================================================================================================-->
    <beans:bean id="credRabbitClient" parent="credGen">
        <beans:property name="credential">
            <beans:bean parent="credLeaf">
                <beans:property name="certificateRequest">
                    <beans:bean parent="certReqLeaf">
                        <beans:constructor-arg name="subject">
                            <!--suppress SpringPlaceholdersInspection -->
                            <beans:bean parent="dn"
                                p:commonName="${phiz.rabbitmq.crypto.client.cred.ssl.subject.cn}"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="credRabbitServer" parent="credGen"
        p:certificateResource="${phiz.rabbitmq.crypto.server.cred.ssl.cert.file}"
        p:eagerInit="true"
        p:privateKeyResource="${phiz.rabbitmq.crypto.server.cred.ssl.key.private.file}">
        <beans:property name="credential">
            <beans:bean parent="credLeaf">
                <beans:property name="certificateRequest">
                    <beans:bean parent="certReqLeaf">
                        <beans:constructor-arg name="subject">
                            <!--suppress SpringPlaceholdersInspection -->
                            <beans:bean parent="dn"
                                p:commonName="${phiz.rabbitmq.crypto.server.cred.ssl.subject.cn}"/>
                        </beans:constructor-arg>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = KEY STORES: CERTIFICATE AUTHORITY
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="keyStoreCa" parent="keyStoreGen" lazy-init="true"
        p:password="${phiz.crypto.store.ca.pass}"
        p:resource="${phiz.crypto.store.ca.file}">
        <beans:property name="entryMap">
            <beans:map>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="${phiz.crypto.store.ca.entry.ca.root.alias}">
                    <!--suppress SpringPlaceholdersInspection -->
                    <beans:bean parent="keyStoreEntryPrivateKey"
                        p:certificateChain="#{ credCaRoot.certificateResponse.identity.chain[0] }"
                        p:password="${phiz.crypto.store.ca.entry.ca.root.pass}"
                        p:privateKey="#{ credCaRoot.certificateResponse.identity.privateKey }"/>
                </beans:entry>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="${phiz.crypto.store.ca.entry.ca.alias}">
                    <!--suppress SpringPlaceholdersInspection -->
                    <beans:bean parent="keyStoreEntryPrivateKey"
                        p:certificateChain="#{ credCa.certificateResponse.identity.chain[0] }"
                        p:password="${phiz.crypto.store.ca.entry.ca.pass}"
                        p:privateKey="#{ credCa.certificateResponse.identity.privateKey }"/>
                </beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = KEY STORES: RABBITMQ
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="keyStoreRabbitClientKey" parent="keyStoreGen" lazy-init="true"
        p:password="${phiz.rabbitmq.crypto.client.store.key.pass}"
        p:resource="${phiz.rabbitmq.crypto.client.store.key.file}">
        <beans:property name="entryMap">
            <beans:map>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="${phiz.rabbitmq.crypto.client.store.key.entry.ssl.alias}">
                    <!--suppress SpringPlaceholdersInspection -->
                    <beans:bean parent="keyStoreEntryPrivateKey"
                        p:certificateChain="#{ credRabbitClient.certificateResponse.identity.chain[0] }"
                        p:password="${phiz.rabbitmq.crypto.client.store.key.entry.ssl.pass}"
                        p:privateKey="#{ credRabbitClient.certificateResponse.identity.privateKey }"/>
                </beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="keyStoreRabbitClientTrust" parent="keyStoreGen" lazy-init="true"
        p:password="${phiz.rabbitmq.crypto.client.store.trust.pass}"
        p:resource="${phiz.rabbitmq.crypto.client.store.trust.file}">
        <beans:property name="entryMap">
            <beans:map>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="${phiz.rabbitmq.crypto.client.store.trust.entry.ca.alias}">
                    <!--suppress SpringPlaceholdersInspection -->
                    <beans:bean parent="keyStoreEntryTrustedCert"
                        p:certificate="#{ credCa.certificateResponse.identity.chain[0] }"/>
                </beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = DATABASE SERVERS
    =====================================================================================================-->
    <beans:bean id="dbServer" class="gov.hhs.onc.phiz.test.impl.PhizHsqlServer" abstract="true"
        p:daemon="true"/>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="dbServerHub" parent="dbServer" destroy-method="stop" init-method="start"
        p:address="${phiz.data.db.host}"
        p:databaseName="${phiz.data.db.name}"
        p:directory="${phiz.data.db.dir}"
        p:password="${phiz.data.db.user.admin.pass}"
        p:port="${phiz.data.db.port}"
        p:user="${phiz.data.db.user.admin.name}"/>
    
    <!--====================================================================================================
    = DATABASE POPULATORS
    =====================================================================================================-->
    <beans:bean id="dbPopulator" class="org.springframework.jdbc.datasource.init.DatabasePopulator" abstract="true"/>
    
    <beans:bean id="dbPopulatorPlaceholderResource" class="gov.hhs.onc.phiz.test.impl.PlaceholderResourceDatabasePopulator" parent="dbPopulator" abstract="true"
        p:scriptEncoding-ref="charsetUtf8"/>
    
    <!--====================================================================================================
    = DATA SOURCE INITIALIZERS
    =====================================================================================================-->
    <beans:bean id="dataSrcInit" class="org.springframework.jdbc.datasource.init.DataSourceInitializer" abstract="true"/>
    
    <beans:bean id="dataSrcInitHub" parent="dataSrcInit" depends-on="dbServerHub"
        p:dataSource-ref="dataSrcHub">
        <beans:property name="databasePopulator">
            <beans:bean parent="dbPopulatorPlaceholderResource">
                <beans:property name="scripts">
                    <beans:array>
                        <beans:value>classpath*:META-INF/phiz/db/db-init-phiz.sql</beans:value>
                        <beans:value>classpath*:META-INF/phiz/db/db-init-phiz-schema.sql</beans:value>
                        <beans:value>classpath*:META-INF/phiz/db/db-init-phiz-data.sql</beans:value>
                    </beans:array>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = HIBERNATE SESSION FACTORIES
    =====================================================================================================-->
    <beans:bean id="hibernateSessionFactoryHub" parent="hibernateSessionFactoryBase" depends-on="dataSrcInitHub"
        p:dataSource-ref="dataSrcHub"/>
</beans:beans>